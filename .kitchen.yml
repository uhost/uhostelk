---
driver:
  name: ec2
  aws_access_key_id: <%= ENV['AWS_ACCESS_KEY_ID'] %>
  aws_secret_access_key: <%= ENV['AWS_SECRET_ACCESS_KEY'] %>
  aws_ssh_key_id: <%= ENV['AWS_SSH_KEY_ID'] %>
  ssh_key: <%= File.expand_path(ENV['AWS_SSH_KEY']) %>
  security_group_ids: ["sg-68e9c90d"]
  region: <%= ENV['AWS_DEFAULT_REGION'] %>
  availability_zone: <%= ENV['AWS_DEFAULT_REGION'] %>c
  require_chef_omnibus: true
  subnet_id: subnet-2ae12073

driver_config:
  require_chef_omnibus: true

provisioner:
  name: chef_zero
  client_rb:
    environment: _default
  attributes:
    openssh:
      server:
        password_authentication: 'yes'
        permit_root_login: 'yes'
    cloud:
      public_ipv4: '127.0.0.1'
    authorization:
      sudo:
        users: ['ubuntu']
        passwordless: true
    platformstack:
      iptables:
        allow_ssh_from_world: true
      cloud_backup:
        enabled: false
      cloud_monitoring:
        enabled: false
      omnibus_updater:
        enabled: false
    elasticsearch:
      network:
        host: '127.0.0.1'
      index:
        number_of_replicas: 0
        # so the kitchen node doesn't have unallocated replica shards
        # and comes up green (healthy) instead of yellow
    elkstack:
      config:
        kibana:
          password: 'kibana'

platforms:
  - name: ubuntu-14.04
    driver:
      image_id: ami-47547277
      username: ubuntu
    run_list:
    - recipe[apt]

suites:
  - name: default
    data_bags_path: "default/data_bags"
    encrypted_data_bag_secret_key_path: "default/encrypted_data_bag_secret"
    run_list:
      - recipe[elkstack::java]
      - recipe[elkstack::cluster] # not testing single, it's practically the same
    attributes:
      elasticsearch:
        discovery:
          zen:
            minimum_master_nodes: 1 # since search returns more than one, but they are fake

